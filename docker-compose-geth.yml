version: '3.2'
services:
  tno-eats:
    container_name: tno-eats
    image: node:16.14
    working_dir: /home/tno-eats
    entrypoint: /entrypoint.sh
    stdin_open: true
    tty: true
    network_mode: host
    ports:
      - "8000:8000"
    volumes:
      - ./:/home/tno-eats
      - ./geth/entrypoint.sh:/entrypoint.sh

  geth-bootnode:
    hostname: geth-bootnode
    image: ethereum/client-go:alltools-stable
    working_dir: /home
    entrypoint: /bootnode.sh
    stdin_open: true
    tty: true
    ports:
      - "30310:30310"
      - "30310:30310/udp"
    volumes:
      - ./geth/boot.key:/home/boot.key
      - ./geth/bootnode.sh:/bootnode.sh
    networks:
      - tnonet

  node1:
    hostname: geth-node1
    image: ethereum/client-go:stable
    depends_on:
      - geth-bootnode
    stdin_open: true
    tty: true
    ports:
      - "8545:8545"
      - "30311:30311"
      - "30311:30311/udp"
    working_dir: /home
    entrypoint: node1/entrypoint.sh
    volumes:
      - ./geth/node1/:/home/node1
      - ./geth/genesis.json:/home/genesis.json
    networks:
      - tnonet

  node2:
    hostname: geth-node2
    image: ethereum/client-go:stable
    depends_on:
      - geth-bootnode
    stdin_open: true
    tty: true
    entrypoint: node2/entrypoint.sh
    working_dir: /home
    ports:
      - "30312:30312"
      - "30312:30312/udp"
    volumes:
      - ./geth/node2/:/home/node2
      - ./geth/genesis.json:/home/genesis.json
    networks:
      - tnonet

networks:
  tnonet:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.0.0/24
